<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.mapper.OrdersMapper">
    <resultMap id="BaseResultMap" type="com.imooc.pojo.Orders">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="receiver_name" property="receiverName" jdbcType="VARCHAR"/>
        <result column="receiver_mobile" property="receiverMobile" jdbcType="VARCHAR"/>
        <result column="receiver_address" property="receiverAddress" jdbcType="VARCHAR"/>
        <result column="total_amount" property="totalAmount" jdbcType="INTEGER"/>
        <result column="real_pay_amount" property="realPayAmount" jdbcType="INTEGER"/>
        <result column="post_amount" property="postAmount" jdbcType="INTEGER"/>
        <result column="pay_method" property="payMethod" jdbcType="INTEGER"/>
        <result column="left_msg" property="leftMsg" jdbcType="VARCHAR"/>
        <result column="extand" property="extand" jdbcType="VARCHAR"/>
        <result column="is_comment" property="isComment" jdbcType="INTEGER"/>
        <result column="is_delete" property="isDelete" jdbcType="INTEGER"/>
        <result column="created_time" property="createdTime" jdbcType="TIMESTAMP"/>
        <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="myOrdersVO" type="com.imooc.vo.MyOrdersVO">
        <id column="orderId" property="orderId" jdbcType="VARCHAR"/>
        <result column="createdTime" property="createdTime" jdbcType="TIMESTAMP"/>
        <result column="payMethod" property="payMethod" jdbcType="INTEGER"/>
        <result column="realPayAmount" property="realPayAmount" jdbcType="INTEGER"/>
        <result column="postAmount" property="postAmount" jdbcType="INTEGER"/>
        <result column="orderStatus" property="orderStatus" jdbcType="INTEGER"/>
        <result column="isComment" property="isComment" jdbcType="INTEGER"/>
        <collection property="subOrderItemList"
                    select="getSubItems"
                    column="orderId"
                    ofType="com.imooc.vo.MySubOrderItemVO">
            <id column="itemId" property="itemId" jdbcType="VARCHAR"/>
            <result column="itemImg" property="itemImg" jdbcType="VARCHAR"/>
            <result column="itemSpecId" property="itemSpecId" jdbcType="VARCHAR"/>
            <result column="itemSpecName" property="itemSpecName" jdbcType="VARCHAR"/>
            <result column="buyCounts" property="buyCounts" jdbcType="INTEGER"/>
            <result column="price" property="price" jdbcType="INTEGER"/>
        </collection>
    </resultMap>


    <select id="queryMyOrders" parameterType="java.util.Map" resultMap="myOrdersVO">
        select
            od.id as orderId,
            od.created_time createdTime,
            od.pay_method as payMethod,
            od.real_pay_amount as realPayAmount,
            od.post_amount as postAmount,
            os.order_status as orderStatus,
            od.is_comment as isComment
        FROM
            orders od
        left join
            order_status os on od.id = os.order_id
        where
            od.user_id = #{paramsMap.userId}
        and
            od.is_delete = 0
        <if test="paramsMap.orderStatus != null and paramsMap.orderStatus != '' ">
            and os.order_status = #{paramsMap.orderStatus}
        </if>
        order by
            od.updated_time asc
    </select>

    <select id="getSubItems" parameterType="String" resultType="com.imooc.vo.MySubOrderItemVO">
        SELECT
            oi.item_id as itemId,
            oi.item_img as itemImg,
            oi.item_spec_name as itemSpecName,
            oi.buy_counts as buyCounts,
            oi.price as price
        from
          order_items oi
        where
          oi.order_id = #{orderId}
    </select>


    <select id="queryMyOrdersDoNot" parameterType="java.util.Map" resultMap="myOrdersVO">
        select
        od.id as orderId,
        od.created_time createdTime,
        od.pay_method as payMethod,
        od.real_pay_amount as realPayAmount,
        od.post_amount as postAmount,
        os.order_status as orderStatus,
        oi.item_id as itemId,
        oi.item_img as itemImg,
        oi.item_spec_name as itemSpecName,
        oi.buy_counts as buyCounts,
        oi.price as price
        FROM
        orders od
        left join
        order_status os on od.id = os.order_id
        left JOIN
        order_items oi on od.id = oi.order_id
        where
        od.user_id = #{paramsMap.userId}
        and
        od.is_delete = 0
        <if test="paramsMap.orderStatus != null and paramsMap.orderStatus != '' ">
            and os.order_status = #{paramsMap.orderStatus}
        </if>
        order by
        od.updated_time asc
    </select>


    <select id="getMyOrderStatusCounts" parameterType="Map" resultType="int">
        SELECT
            count(1)
        FROM
            orders o
        left JOIN
            order_status os on o.id = os.order_id
        where
            o.user_id = #{paramsMap.userId}
        and
            os.order_status = #{paramsMap.orderStatus}
        <if test="paramsMap.isComment != null and paramsMap.isComment != '' ">
            and o.is_comment = #{paramsMap.isComment}
        </if>
    </select>

    <select id="getMyOrderTrend" parameterType="Map" resultType="com.imooc.pojo.OrderStatus">
        SELECT
            os.order_id as orderId,
            os.order_status as orderStatus,
            os.created_time as createdTime,
            os.pay_time as payTime,
            os.deliver_time as deliverTime,
            os.success_time as successTime,
            os.close_time as closeTime,
            os.comment_time as commentTime
        FROM
            orders o
        left JOIN
            order_status os on o.id = os.order_id
        where
            o.user_id = #{paramsMap.userId}
        and
            os.order_status in (20,30,40)
        and
            o.is_delete = 0
        order by
            os.order_id desc
    </select>

</mapper>